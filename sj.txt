github 学习笔记：
$ cd /e/github/repo     定位到某个文件夹
$ pwd                   查看当前文件夹
$ init                  初始化和创建.git库
$ status                查看库状态
$ git add sj.txt        添加新文件或修改过的文件是一样的两步
$ git commit -m ""      提交，可添加多个，一起提交。引号为提交时的版本说明
$ git diff              查看之前的修改状态

$ git log               会看之前做了多少次修改

$ git log --pretty=oneline  如果嫌信息太多，就加这个参数

需要友情提示的是，你看到的一大串类似1094adb...的是commit id（版本号）和SVN不一样，Git的commit id不是1，2，3……递增的数字，而是一个SHA1计算出来的一个非常大的数字，用十六进制表示，而且你看到的commit id和我的肯定不一样，以你自己的为准。为什么commit id需要用这么一大串数字表示呢？因为Git是分布式的版本控制系统，后面我们还要研究多人在同一个版本库里工作，如果大家都用1，2，3……作为版本号，那肯定就冲突了。

每提交一个新版本，实际上Git就会把它们自动串成一条时间线。如果使用可视化工具查看Git历史，就可以更清楚地看到提交历史的时间线：

好了，现在我们启动时光穿梭机，准备把readme.txt回退到上一个版本，也就是add distributed的那个版本，怎么做呢？


$git --hard HEAD^    当前版本回退上一个版本
首先，Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，也就是最新的提交1094adb...（注意我的提交ID和你的肯定不一样），上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。



